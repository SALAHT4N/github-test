Git and GitHub
--------------------
* if we tried to delete a branch that wasn't merged, then we must use -D instead of -d.
** GitHub 
* There is one shared repository that is stored online, every user takes a copy of it as his local 
  repo, then shen he finishes his feature, he pushes the code to merge it with the master branch of 
  the shared repo.

  it's like every user is a branch of the master branch in the shared repository.

  git remote add origin link : to make an alias.


* git push origin master
  the last argument is the name of the branch that is stored locally and want to upload,
  not the name of the one in the remote.
  so regardless of what branch we are currently checking out, we can push any branch we 
  desire.

* If you checked out a previous commit.
* You are in 'detached HEAD' state. You can look around, make experimental
  changes and commit them, and you can discard any commits you make in this
  state without impacting any branches by switching back to a branch.

  If you want to create a new branch to retain commits you create, you may
  do so (now or later) by using -c with the switch command. Example:

    git switch -c <new-branch-name>

  Or undo this operation with:

    git switch -

  Turn off this advice by setting config variable advice.detachedHead to false
